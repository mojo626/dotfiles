(defpoll clock_time :interval "5m" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_second :interval "100ms" "date +\%S")
(defpoll clock_date :interval "10h" "date '+%m/%d'")
(defvar time_rev false)
(defvar wifi_rev false)
(defvar eww "eww -c $HOME/.config/eww/bar/")

(defvar username "whoami")

(defpoll COL_WLAN :interval "5s" "bash ~/.config/eww/scripts/wifi --COL")
(defpoll ESSID_WLAN :interval "5s" "bash ~/.config/eww/scripts/wifi --ESSID")
(defpoll WLAN_ICON :interval "1m" "bash ~/.config/eww/scripts/wifi --ICON")

(deflisten music_status :initial ""  "bash ~/.config/eww/scripts/music --status")
(deflisten music_title :initial ""  "bash ~/.config/eww/scripts/music --title")
(deflisten music_artist :initial ""  "bash ~/.config/eww/scripts/music --artist")
(defpoll music_cover :interval "500ms"  "bash ~/.config/eww/scripts/music --cover")
(defpoll music_progress :interval "500ms"  "bash ~/.config/eww/scripts/music --time")
(defpoll volume :interval "2s"  "bash ~/.config/eww/scripts/music --volume")



(defpoll workspace_string :interval "100ms" "bash ~/.config/eww/scripts/workspaces")


(defwidget bar [] 
  (box :orientation "h"
    (left)
    (center)
    (right)))

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "5px"
                      :width "98.5%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  :exclusive true
  :stacking "fg"
  (bar))



(defwidget right []
	(box :orientation "h" 
		 :space-evenly false  
         :halign "end"
		 :class "right_modules"
     :spacing 20
  
  (system_resources)
  (sep)
  (statuspanel)
  (power))
)

(defwidget left []
  (box :orientation "h" 
    :space-evenly false  
        :halign "start"
    :class "left_modules"
    :spacing 20
  (menubutton)
  (workspaces))
)

(defwidget center []
  (box :orientation "h" 
    :space-evenly false  
        :halign "center"
    :class "center_modules"
    :spacing 20

    (clock)
    (music))
)


(defwidget sep []
  (box :class "module-2" :vexpand "false" :hexpand "false"
    (label :class "separ" :text "|")))


(defwidget clock []
  (eventbox :onhover "${eww} update time_rev=true" :onhoverlost "${eww} update time_rev=false"
    (box :class "module" :space-evenly "false" :orientation "h" :spacing 3
      (label :text clock_time)
      (label :text ":")
      (label :text clock_minute)
      (label :text ":")
      (label :text clock_second)
      (revealer :transition "slideleft" :reveal time_rev :duration "350ms"
        (label :text clock_date)
      )
       
    )
  )
)

(defwidget statuspanel []
    (box :vexpand "false" :hexpand "false" :space-evenly "false" :orientation "h"
      (button :class "status-panel" :onclick "bash ~/.config/eww/scripts/toggle_control_pop" :wrap "false" 
        (box :orientation "h" :spacing 15 :space-evenly "false"
          (label :text "󰕾" :class "icon")
          (label :text "${volume}%")
          (label :text WLAN_ICON :class "icon")
        )
      )
      
    )
)


;;add tooltips or extra window for showing real values of system resources instead of just graphs (something better than just tooltips?)
(defwidget system_resources []
  (box :vexpand "false" :hexpand "false" :space-evenly "false" :orientation "h"
        (box :orientation "h" :spacing 15 :space-evenly "false"
          (label :text "" :class "icon")
          (circular-progress :value {EWW_RAM["used_mem_perc"]} :thickness 10 :start-at 75 :tooltip "${round(EWW_RAM["used_mem_perc"], 2)}%")
          (label :text "" :class "icon")
          (circular-progress :value {EWW_CPU["avg"]} :thickness 10 :start-at 75 :tooltip "${round(EWW_CPU["avg"], 2)}%")
            
        )
      
    )
)

(defwidget workspaces []
    (box :vexpand "false" :hexpand "false" :space-evenly "false" :orientation "h" :class "workspace-box"
      (label :text workspace_string)
      
    )
)

(defwidget power []
    (box :vexpand "false" :hexpand "false" :space-evenly "false" :orientation "h"
      (button :class "module-power" :onclick "hyprctl dispatch exit" :wrap "false" :limit-width 12  (label :text "" :class "icon"))
      
    )
)

(defwidget music []
  (eventbox :onclick "bash ~/.config/eww/scripts/toggle_center_pop"
    (box :space-evenly "false" :orientation "h" :spacing 5
      (label :text music_title :limit-width 25)
      (label :text "-")
      (label :text music_artist :limit-width 25)
    )
  )
)

(defwidget menubutton []
  (box :vexpand "false" :hexpand "false" :space-evenly "false" :orientation "h"
      (button :class "module-power" :onclick "" :wrap "false" :limit-width 12  (label :text "󱄅" :class "icon"))
      
  )
)



;; Music popup

(defwindow center_win :stacking "fg" :focusable "false" :screen 1 :monitor 0
			    :geometry (geometry :x "0" :y "5px" :width 528 :height 104 :anchor "top center")
			     				(center_pop))

(defwidget center_music_info []
  (box :class "music_info" :orientation "v" :spacing 10 :space-evenly "false" :vexpand "true" :hexpand "false"
    (box :class "music_cover_art" :vexpand "false" :hexpand "false" :style "background-image: url('${music_cover}');")
    (label :text music_title :halign "center" :wrap "true" :limit-width 25 )
    (label :text music_artist :halign "center" :wrap "true" :limit-width 25)
    (box :orientation "h" :spacing 15 :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
        (button :class "music_btn_prev" :onclick "bash ~/.config/eww/scripts/music --prev" "󰒮")
        (button :class "music_btn_play" :onclick "bash ~/.config/eww/scripts/music --toggle" {music_status == "Playing" ? "" : ""})
        (button :class "music_btn_next" :onclick "bash ~/.config/eww/scripts/music --next" "󰒭"))
      (box :class "music_bar" :vexpand "false" :hexpand "false" 
        (scale :min 0 :active "false" :max 100 :value music_progress))
  )
)

(defwidget center_pop []
  (box :orientation "h" :space-evenly "true" :class "center_pop" :spacing 20
    (box :orientation "v" :space-evenly "false" :spacing 20
    (box :orientation "v" :space-evenly "false" :halign "center"
      (label :class "center_time" :text "${clock_time} : ${clock_minute}")
      (label :text "Weekday, Month day" :style "font-size: 15px; padding-top: 5px;")
    )
      
      (calendar :class "cal")
    )
    (center_music_info)
    
  )
)
  

;; Control Panel Window

(defwindow control_win :stacking "fg" :focusable "false" :screen 1 :monitor 0
			    :geometry (geometry :x "0" :y "0px" :width 528 :height 104 :anchor "right top")
			     				(control_pop))


(defwidget control_pop []
  (control_top_bar)
)

(defwidget control_top_bar []
  (box :orientation "h"
    (label :text username)
  )
)